From c91bdbc540048ee51e20be1fa544569f9c54154e Mon Sep 17 00:00:00 2001
From: "Christopher M. Cantalupo" <christopher.m.cantalupo@intel.com>
Date: Thu, 28 Jun 2018 09:00:11 -0700
Subject: [PATCH] Fix possible C string truncation caught by gcc 8.

- Fixes #289.

Change-Id: I438b82c94e77198721e70f335e1d12b322f24af6
Signed-off-by: Christopher M. Cantalupo <christopher.m.cantalupo@intel.com>
---
 src/Exception.cpp      |  4 ++--
 src/geopmpolicy_main.c | 20 ++++++++++----------
 2 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/src/Exception.cpp b/src/Exception.cpp
index e6a152268..3630bcccf 100644
--- a/src/Exception.cpp
+++ b/src/Exception.cpp
@@ -144,7 +144,7 @@ extern "C"
     void geopm_error_destroy_shmem(void)
     {
         int err = 0;
-        char err_msg[NAME_MAX];
+        char err_msg[2 * NAME_MAX];
         DIR *did = opendir("/dev/shm");
         if (did &&
             strlen(geopm_env_shmkey()) &&
@@ -161,7 +161,7 @@ extern "C"
                     strncpy(shm_key + 1, entry->d_name, NAME_MAX - 2);
                     err = shm_unlink(shm_key);
                     if (err) {
-                        snprintf(err_msg, NAME_MAX, "Warning: <geopm> unable to unlink \"%s\"", shm_key);
+                        snprintf(err_msg, 2 * NAME_MAX, "Warning: <geopm> unable to unlink \"%s\"", shm_key);
                         perror(err_msg);
                     }
                 }
diff --git a/src/geopmpolicy_main.c b/src/geopmpolicy_main.c
index 2acc643fe..100094681 100644
--- a/src/geopmpolicy_main.c
+++ b/src/geopmpolicy_main.c
@@ -70,10 +70,10 @@ int main(int argc, char** argv)
     int opt = 0;
     int err = 0;
     int exec_mode = 0;
-    char file[GEOPMPOLICY_STRING_LENGTH] = {0};
+    char file[2 * GEOPMPOLICY_STRING_LENGTH] = {0};
     char mode_string[GEOPMPOLICY_STRING_LENGTH] = {0};
     char option_string[GEOPMPOLICY_STRING_LENGTH] = {0};
-    char copy_string[GEOPMPOLICY_STRING_LENGTH] = {0};
+    char copy_string[2 * GEOPMPOLICY_STRING_LENGTH] = {0};
     char error_string[GEOPMPOLICY_STRING_LENGTH] = {0};
     FILE *infile = NULL;
     FILE *outfile = NULL;
@@ -242,12 +242,12 @@ int main(int argc, char** argv)
                 }
                 if (!err) {
                     if (file[0] == '/') {
-                        snprintf(copy_string, GEOPMPOLICY_STRING_LENGTH, "/tmp%s", file);
-                        strncpy(file, copy_string, GEOPMPOLICY_STRING_LENGTH);
+                        snprintf(copy_string, 2 * GEOPMPOLICY_STRING_LENGTH, "/tmp%s", file);
+                        strncpy(file, copy_string, 2 * GEOPMPOLICY_STRING_LENGTH);
                     }
                     else {
-                        snprintf(copy_string, GEOPMPOLICY_STRING_LENGTH, "/tmp/%s", file);
-                        strncpy(file, copy_string, GEOPMPOLICY_STRING_LENGTH);
+                        snprintf(copy_string, 2 * GEOPMPOLICY_STRING_LENGTH, "/tmp/%s", file);
+                        strncpy(file, copy_string, 2 * GEOPMPOLICY_STRING_LENGTH);
                     }
                 }
             }
@@ -292,13 +292,13 @@ int main(int argc, char** argv)
                 }
                 if (!err) {
                     if (file[0] == '/') {
-                        snprintf(copy_string, GEOPMPOLICY_STRING_LENGTH, "/tmp%s", file);
-                        strncpy(file, copy_string, GEOPMPOLICY_STRING_LENGTH);
+                        snprintf(copy_string, 2 * GEOPMPOLICY_STRING_LENGTH, "/tmp%s", file);
+                        strncpy(file, copy_string, 2 * GEOPMPOLICY_STRING_LENGTH);
                     }
                     else {
                         printf("file = %s\n",file);
-                        snprintf(copy_string, GEOPMPOLICY_STRING_LENGTH, "/tmp/%s", file);
-                        strncpy(file, copy_string, GEOPMPOLICY_STRING_LENGTH);
+                        snprintf(copy_string, 2 * GEOPMPOLICY_STRING_LENGTH, "/tmp/%s", file);
+                        strncpy(file, copy_string, 2 * GEOPMPOLICY_STRING_LENGTH);
                         printf("file = %s\n",file);
                     }
                 }
From b2c4fb914eb1773d6be6ae44b20040160c89ef85 Mon Sep 17 00:00:00 2001
From: "Christopher M. Cantalupo" <christopher.m.cantalupo@intel.com>
Date: Thu, 28 Jun 2018 11:57:20 -0700
Subject: [PATCH] Fix string sizing for strncpy and snprintf for gnu8.

- Also fix null termination in case of string overflow.

Change-Id: I32b5199ba6bdf9f88b2f679c75a9ed587868efbf
Signed-off-by: Christopher M. Cantalupo <christopher.m.cantalupo@intel.com>
---
 src/PlatformImp.cpp    |  7 +++----
 src/ProfileTable.cpp   |  4 ++--
 src/geopmpolicy_main.c | 22 +++++++++++-----------
 3 files changed, 16 insertions(+), 17 deletions(-)

diff --git a/src/PlatformImp.cpp b/src/PlatformImp.cpp
index 4125ef436..67bfa2fa0 100644
--- a/src/PlatformImp.cpp
+++ b/src/PlatformImp.cpp
@@ -121,9 +121,7 @@ namespace geopm
         , m_is_initialized(other.m_is_initialized)
         , M_MSR_SAVE_FILE_PATH(other.M_MSR_SAVE_FILE_PATH)
     {
-        // Copy C string for m_msr_path
-        m_msr_path[NAME_MAX - 1] = '\0';
-        strncpy(m_msr_path, other.m_msr_path, NAME_MAX - 1);
+        memcpy(m_msr_path, other.m_msr_path, NAME_MAX);
     }
 
 
@@ -450,7 +448,8 @@ namespace geopm
             }
 
             char tmp_path_template[NAME_MAX];
-            strncpy(tmp_path_template, path, NAME_MAX);
+            tmp_path_template[NAME_MAX - 1] = '\0';
+            strncpy(tmp_path_template, path, NAME_MAX - 1);
             int fd = mkstemp(tmp_path_template);
             if (fd == -1) {
                 std::ostringstream message;
diff --git a/src/ProfileTable.cpp b/src/ProfileTable.cpp
index 5710aeb15..35561322f 100644
--- a/src/ProfileTable.cpp
+++ b/src/ProfileTable.cpp
@@ -328,8 +328,8 @@ namespace geopm
 
         while (buffer_remain) {
             tmp_name[NAME_MAX - 1] = '\0';
-            strncpy(tmp_name, buffer_ptr, NAME_MAX);
-            if (tmp_name[NAME_MAX - 1] != '\0') {
+            char *end_ptr = strncpy(tmp_name, buffer_ptr, NAME_MAX - 1);
+            if (end_ptr == tmp_name + NAME_MAX - 1) {
                 throw Exception("ProfileTable::name_set(): key string is too long", GEOPM_ERROR_RUNTIME, __FILE__, __LINE__);
             }
             if (strlen(tmp_name)) {
diff --git a/src/geopmpolicy_main.c b/src/geopmpolicy_main.c
index 100094681..6e03af9f1 100644
--- a/src/geopmpolicy_main.c
+++ b/src/geopmpolicy_main.c
@@ -73,7 +73,7 @@ int main(int argc, char** argv)
     char file[2 * GEOPMPOLICY_STRING_LENGTH] = {0};
     char mode_string[GEOPMPOLICY_STRING_LENGTH] = {0};
     char option_string[GEOPMPOLICY_STRING_LENGTH] = {0};
-    char copy_string[2 * GEOPMPOLICY_STRING_LENGTH] = {0};
+    char copy_string[4 * GEOPMPOLICY_STRING_LENGTH] = {0};
     char error_string[GEOPMPOLICY_STRING_LENGTH] = {0};
     FILE *infile = NULL;
     FILE *outfile = NULL;
@@ -231,7 +231,7 @@ int main(int argc, char** argv)
 
     if (!err && exec_mode == GEOPMPOLICY_EXEC_MODE_RESTORE) {
         if (strlen(file) == 0) {
-            snprintf(file, GEOPMPOLICY_STRING_LENGTH, "/tmp/.geopm_msr_restore.log");
+            snprintf(file, sizeof(file), "/tmp/.geopm_msr_restore.log");
         }
         else {
             //Make sure we are using tempfs to keep these files local to the machine
@@ -242,12 +242,12 @@ int main(int argc, char** argv)
                 }
                 if (!err) {
                     if (file[0] == '/') {
-                        snprintf(copy_string, 2 * GEOPMPOLICY_STRING_LENGTH, "/tmp%s", file);
-                        strncpy(file, copy_string, 2 * GEOPMPOLICY_STRING_LENGTH);
+                        snprintf(copy_string, sizeof(copy_string), "/tmp%s", file);
+                        strncpy(file, copy_string, sizeof(file) - 1);
                     }
                     else {
-                        snprintf(copy_string, 2 * GEOPMPOLICY_STRING_LENGTH, "/tmp/%s", file);
-                        strncpy(file, copy_string, 2 * GEOPMPOLICY_STRING_LENGTH);
+                        snprintf(copy_string, sizeof(copy_string), "/tmp/%s", file);
+                        strncpy(file, copy_string, sizeof(file) - 1);
                     }
                 }
             }
@@ -281,7 +281,7 @@ int main(int argc, char** argv)
         char* pdir;
 
         if (strlen(file) == 0) {
-            snprintf(file, GEOPMPOLICY_STRING_LENGTH, "/tmp/.geopm_msr_restore.log");
+            snprintf(file, sizeof(file), "/tmp/.geopm_msr_restore.log");
         }
         else {
             //Make sure we are using tempfs to keep these files local to the machine
@@ -292,13 +292,13 @@ int main(int argc, char** argv)
                 }
                 if (!err) {
                     if (file[0] == '/') {
-                        snprintf(copy_string, 2 * GEOPMPOLICY_STRING_LENGTH, "/tmp%s", file);
-                        strncpy(file, copy_string, 2 * GEOPMPOLICY_STRING_LENGTH);
+                        snprintf(copy_string, sizeof(copy_string), "/tmp%s", file);
+                        strncpy(file, copy_string, sizeof(file) - 1);
                     }
                     else {
                         printf("file = %s\n",file);
-                        snprintf(copy_string, 2 * GEOPMPOLICY_STRING_LENGTH, "/tmp/%s", file);
-                        strncpy(file, copy_string, 2 * GEOPMPOLICY_STRING_LENGTH);
+                        snprintf(copy_string, sizeof(copy_string), "/tmp/%s", file);
+                        strncpy(file, copy_string, sizeof(file) - 1);
                         printf("file = %s\n",file);
                     }
                 }
