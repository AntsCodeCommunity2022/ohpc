--- a/./test/PlatformFactoryTest.cpp	2018-06-27 09:17:15.000000000 -0700
+++ b/./test/PlatformFactoryTest.cpp	2018-06-27 09:13:54.000000000 -0700
@@ -109,7 +109,7 @@
     try {
         p = m_platform_fact.platform("rapl", true);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     ASSERT_TRUE(p == NULL);
--- a/./test/PlatformTopologyTest.cpp	2018-06-27 09:17:15.000000000 -0700
+++ b/./test/PlatformTopologyTest.cpp	2018-06-27 09:14:01.000000000 -0700
@@ -73,7 +73,7 @@
     try {
         val = m_topo.num_domain(HWLOC_OBJ_TYPE_MAX);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
 
--- a/./test/RegionTest.cpp	2018-06-27 09:17:15.000000000 -0700
+++ b/./test/RegionTest.cpp	2018-06-27 09:14:57.000000000 -0700
@@ -422,7 +422,7 @@
     try {
         m_tree_region->mean(2, GEOPM_TELEMETRY_TYPE_RUNTIME);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -430,7 +430,7 @@
     try {
         m_tree_region->median(2, GEOPM_TELEMETRY_TYPE_RUNTIME);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -438,7 +438,7 @@
     try {
         m_tree_region->std_deviation(2, GEOPM_TELEMETRY_TYPE_RUNTIME);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -446,7 +446,7 @@
     try {
         m_tree_region->min(2, GEOPM_TELEMETRY_TYPE_RUNTIME);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -454,7 +454,7 @@
     try {
         m_tree_region->max(2, GEOPM_TELEMETRY_TYPE_RUNTIME);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -462,7 +462,7 @@
     try {
         m_tree_region->derivative(2, GEOPM_TELEMETRY_TYPE_RUNTIME);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -470,7 +470,7 @@
     try {
         m_tree_region->num_sample(2, GEOPM_TELEMETRY_TYPE_RUNTIME);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -478,7 +478,7 @@
     try {
         m_tree_region->signal(2, GEOPM_TELEMETRY_TYPE_RUNTIME);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -490,7 +490,7 @@
     try {
         m_tree_region->mean(0, GEOPM_NUM_TELEMETRY_TYPE + 1);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -498,7 +498,7 @@
     try {
         m_tree_region->median(0, GEOPM_NUM_TELEMETRY_TYPE + 1);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -506,7 +506,7 @@
     try {
         m_tree_region->std_deviation(0, GEOPM_NUM_TELEMETRY_TYPE + 1);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -514,7 +514,7 @@
     try {
         m_tree_region->min(0, GEOPM_NUM_TELEMETRY_TYPE + 1);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -522,7 +522,7 @@
     try {
         m_tree_region->max(0, GEOPM_NUM_TELEMETRY_TYPE + 1);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -530,7 +530,7 @@
     try {
         m_tree_region->derivative(0, GEOPM_NUM_TELEMETRY_TYPE + 1);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -538,7 +538,7 @@
     try {
         m_tree_region->num_sample(0, GEOPM_NUM_TELEMETRY_TYPE + 1);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -546,7 +546,7 @@
     try {
         m_tree_region->signal(0, GEOPM_NUM_TELEMETRY_TYPE + 1);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_INVALID, thrown);
@@ -558,7 +558,7 @@
     try {
         m_tree_region->derivative(0, GEOPM_SAMPLE_TYPE_RUNTIME);
     }
-    catch (geopm::Exception e) {
+    catch (geopm::Exception& e) {
         thrown = e.err_value();
     }
     EXPECT_EQ(GEOPM_ERROR_NOT_IMPLEMENTED, thrown);
--- a/./test/PlatformImpTest.cpp	2018-06-27 09:17:15.000000000 -0700
+++ b/./test/PlatformImpTest.cpp	2018-06-27 09:15:30.000000000 -0700
@@ -631,7 +631,7 @@
     try {
         (void) m_platform->msr_read(geopm::GEOPM_DOMAIN_CPU, (NUM_CPU+2), name);
     }
-    catch(geopm::Exception e) {
+    catch(geopm::Exception& e) {
         thrown = e.err_value();
     }
 
@@ -647,7 +647,7 @@
     try {
         m_platform->msr_write(geopm::GEOPM_DOMAIN_CPU, (NUM_CPU+2), name, value);
     }
-    catch(geopm::Exception e) {
+    catch(geopm::Exception& e) {
         thrown = e.err_value();
     }
 
@@ -664,7 +664,7 @@
     try {
         (void) m_platform->msr_read(geopm::GEOPM_DOMAIN_CPU, NUM_CPU, name);
     }
-    catch(std::runtime_error e) {
+    catch(std::runtime_error& e) {
         thrown = 1;
     }
 
@@ -680,7 +680,7 @@
     try {
         m_platform->msr_write(geopm::GEOPM_DOMAIN_CPU, NUM_CPU, name, value);
     }
-    catch(std::runtime_error e) {
+    catch(std::runtime_error& e) {
         thrown = 1;
     }
 
@@ -695,7 +695,7 @@
     try {
         p.msr_open(5000);
     }
-    catch(geopm::Exception e) {
+    catch(geopm::Exception& e) {
         thrown = 1;
     }
 
@@ -716,7 +716,7 @@
     try {
         m_platform->parse_hw_topology();
     }
-    catch(std::system_error e) {
+    catch(std::system_error& e) {
         thrown = 1;
     }
 
--- a/./src/MPICommSplit.cpp	2018-06-27 09:17:15.000000000 -0700
+++ b/./src/MPICommSplit.cpp	2018-06-27 09:15:40.000000000 -0700
@@ -124,7 +124,7 @@
             try {
                 shmem = new geopm::SharedMemory(shmem_key.str(), sizeof(int));
             }
-            catch (geopm::Exception ex) {
+            catch (geopm::Exception& ex) {
                 if (ex.err_value() != EEXIST) {
                     throw ex;
                 }
--- a/./src/Controller.cpp	2018-06-27 09:17:15.000000000 -0700
+++ b/./src/Controller.cpp	2018-06-27 09:16:00.000000000 -0700
@@ -635,7 +635,7 @@
                     }
                     is_converged = m_policy[level]->is_converged(GEOPM_REGION_ID_EPOCH);
                 }
-                catch (geopm::Exception ex) {
+                catch (geopm::Exception& ex) {
                     if (ex.err_value() != GEOPM_ERROR_SAMPLE_INCOMPLETE) {
                         throw ex;
                     }
--- a/./src/Agent.cpp	2018-06-27 09:17:15.000000000 -0700
+++ b/./src/Agent.cpp	2018-06-27 09:16:29.000000000 -0700
@@ -156,7 +156,7 @@
     try {
         auto tmp = geopm::agent_factory().dictionary(agent_name);
     }
-    catch (geopm::Exception ex) {
+    catch (geopm::Exception& ex) {
         if (ex.err_value() == GEOPM_ERROR_INVALID) {
             err = GEOPM_ERROR_NO_AGENT;
         }
@@ -177,7 +177,7 @@
         *num_policy = geopm::Agent::num_policy(
             geopm::agent_factory().dictionary(agent_name));
     }
-    catch (geopm::Exception ex) {
+    catch (geopm::Exception& ex) {
         if (ex.err_value() == GEOPM_ERROR_INVALID) {
             err = GEOPM_ERROR_NO_AGENT;
         }
@@ -199,7 +199,7 @@
         *num_sample = geopm::Agent::num_sample(
             geopm::agent_factory().dictionary(agent_name));
     }
-    catch (geopm::Exception ex) {
+    catch (geopm::Exception& ex) {
         if (ex.err_value() == GEOPM_ERROR_INVALID) {
             err = GEOPM_ERROR_NO_AGENT;
         }
@@ -235,7 +235,7 @@
                 policy_name[policy_name_max - 1] = '\0';
             }
         }
-        catch (geopm::Exception ex) {
+        catch (geopm::Exception& ex) {
             if (ex.err_value() == GEOPM_ERROR_INVALID) {
                 err = GEOPM_ERROR_NO_AGENT;
             }
@@ -272,7 +272,7 @@
                 sample_name[sample_name_max - 1] = '\0';
             }
         }
-        catch (geopm::Exception ex) {
+        catch (geopm::Exception& ex) {
             if (ex.err_value() == GEOPM_ERROR_INVALID) {
                 err = GEOPM_ERROR_NO_AGENT;
             }
