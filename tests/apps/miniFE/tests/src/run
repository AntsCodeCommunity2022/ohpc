#!/bin/bash

source /opt/ohpc/pub/compiler/intel/composer_xe_2013_sp1.2.144/bin/compilervars.sh intel64
source /opt/ohpc/pub/mpi/impi/4.1.3.048/bin64/mpivars.sh

exe=./miniFE.x
log=./miniFE.log
yaml="miniFE.*.yaml"

out_single=yaml.single
out_strong=yaml.strong
out_weak=yaml.weak

num_ranks_per_node=8
num_nodes=4
num_threads=4
num_iterations=5
verify=1

x=256
y=256
z=256

if [ ! -f $exe ]
then
  echo ERROR: $exe file does not exist
  exit
fi

rm -f  $log
rm -rf $out_single
rm -rf $out_strong
rm -rf $out_weak

export OMP_NUM_THREADS=$num_threads

function summary {
  out=$1
  mkdir -p $out
  mv $yaml $out
  grep "Total CG Time" $out/$yaml
  echo
}

echo "miniFE single node runs..."
for i in $(seq 1 $num_iterations)
do
  for j in $(seq 1 $num_nodes)
  do
    srun -N 1 -n $num_ranks_per_node --nodelist=c$j $exe nx=$x ny=$y nz=$z verify_solution=$verify >>$log
  done
done
summary $out_single

echo "miniFE strong scaling runs..."
for i in $(seq 1 $num_iterations)
do
  for j in $(seq 1 $num_nodes)
  do
    r=$((j*num_ranks_per_node))
    srun -N $j -n $r $exe nx=$x ny=$y nz=$z verify_solution=$verify >>$log
  done
done
summary $out_strong

echo "miniFE weak scaling runs..."
dx=$((x/num_nodes))
for i in $(seq 1 $num_iterations)
do
  for j in $(seq 1 $num_nodes)
  do
    r=$((j*num_ranks_per_node))
    nx=$((j*dx))
    srun -N $j -n $r $exe nx=$nx ny=$y nz=$z verify_solution=$verify >>$log
  done
done
summary $out_weak

exit
