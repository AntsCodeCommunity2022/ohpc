#!.//common/bats/bin/bats 
# -*-sh-*-

source ./common/test_helper_functions.bash || exit 1
source ./common/functions || exit 1

if [ -s ./TEST_ENV ];then
    source ./TEST_ENV
fi

if [ "$RESOURCE_MANAGER" = "slurm" ];then
    rm=slurm
else
    ERROR "Unsupported or unknown resource manager"
    exit 1
fi

PKG="Boost/MKL ublas header"


@test "[$PKG] sylvester_mkl 100 iter 400x600 test under resource manager ($rm/$LMOD_FAMILY_COMPILER/$LMOD_FAMILY_MPI)" {
    test="sylvester_mkl"
    ARGS="100 400 600"
    CMD_TIMEOUT=30
    echo $test 
    if [ ! -x $test ];then
        flunk "$test does not exist"
    fi

    rm -f $test.results

    run run_serial_binary -o $test.results ./$test $ARGS 
    assert_success

    # Verify a timing was recorded
    run grep "Total time" $test.results 
    assert_success

#    run grep "Iterations" $test.results 
#    assert_success

#    mkl_iter_arr=($(grep Iterations $test.results | sed s/\ /\\n/g))
}

@test "[$PKG] sylvester_ublas 100 iter 400x600 test under resource manager ($rm/$LMOD_FAMILY_COMPILER/$LMOD_FAMILY_MPI)" {
    test="sylvester_ublas"
    ARGS="100 400 600"
    CMD_TIMEOUT=30
    echo $test 
    if [ ! -x $test ];then
        flunk "$test does not exist"
    fi

    rm -f $test.results

    run run_serial_binary -o $test.results ./$test $ARGS 
    assert_success

    # Verify a timing was recorded
    run grep "Total time" $test.results 
    assert_success

#    run grep "Iterations" $test.results 
#    assert_success

#    ublas_iter_arr=($(grep Iterations $test.results | sed s/\ /\\n/g))
}


@test "[$PKG] sylvester Iterations match test between MKL and ublas" {
    test1="sylvester_mkl"
    test2="sylvester_ublas"
    ARGS="100 400 600"
    echo $test1
    if [ ! -x $test1 ];then
        flunk "$test1 does not exist"
    fi

    echo $test2
    if [ ! -x $test2 ];then
        flunk "$test2 does not exist"
    fi

    rm -f $test1.results
    rm -f $test2.results

# Removing quotes  on "$ARGS" as it does not recognize the 2nd and the 3rd params 
    run run_serial_binary -o $test1.results ./$test1 $ARGS 
    assert_success

# Weird -- the line below will only take the 1st of the ARGS parameters unlike above ... 
#    run run_serial_binary -o $test2.results ./$test2 $ARGS 
    run run_serial_binary -o $test2.results ./$test2 100 400 600 
    assert_success

    mkl_iter_arr=($(grep Iterations $test1.results | sed s/\ /\\n/g))
    ublas_iter_arr=($(grep Iterations $test2.results | sed s/\ /\\n/g))

#    echo "Test ................................................................"
#    echo "MKL Iter: ${mkl_iter_arr[1]}"
#    echo "ublas Iter: ${ublas_iter_arr[1]}"

    if [ ${mkl_iter_arr[1]} != ${ublas_iter_arr[1]} ]; then
       echo "MKL   Iter: ${mkl_iter_arr[1]}"
       echo "ublas Iter: ${ublas_iter_arr[1]}"
       flunk "Number of Iterations between MKL= ${mkl_iter_arr[1]} do not match ublas= ${ublas_iter_arr[1]}"
#       flunk "Number of iterations between MKL and ublas do not match"
    fi
}
#    run run_mpi_binary -t $CMD_TIMEOUT -o $ofile ../$EXE "$ARGS" $NODES $TASKS
#ARGS="-in $ifile"
#EXE=$TEST_EXE.$LMOD_FAMILY_COMPILER.$LMOD_FAMILY_MPI
